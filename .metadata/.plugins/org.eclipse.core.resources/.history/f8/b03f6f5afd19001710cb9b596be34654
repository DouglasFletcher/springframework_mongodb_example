package com.dbconnect.example.dao;


import java.util.ArrayList;
import java.util.List;

import org.bson.Document;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.mongodb.MongoDbFactory;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Component;


@Component("userMongoDAO")
public class UserMongoDAO {

	private MongoTemplate mongoTemplate;
	
	@Autowired
	@Qualifier("dataSourceMongo")
	public void setDataSource(MongoDbFactory dataSourceMongo) {
		this.mongoTemplate = new MongoTemplate(dataSourceMongo);
	};

	
	public List<UserOracle> getUsers(){
		Query queryTest = new Query();
		queryTest.addCriteria(Criteria.where("firstname").is("douglas"));
		List<UserOracle> usersInDB = mongoTemplate.getCollection("users").find(queryTest, UserOracle.class);
		System.out.println(mongoTemplate.getCollection("users").find().toArray());
				
		return null;
	};		
		
		
		/*
		List<User> users = new ArrayList<User>();
		
		// get collection iterator
		MongoDatabase dbase = mongoClient.getDatabase("test");
		MongoCollection<Document> collection = dbase.getCollection("users");
		MongoCursor<Document> cursor = collection.find().iterator();
				
		// get data
		try{
			while(cursor.hasNext()){
				Document cur = cursor.next();
				// create user
				User user = new User();
				user.setAccountbalance(cur.getInteger("accountbalance"));
				user.setFirstname(cur.getString("firstname"));
				user.setLastname(cur.getString("lastname"));
				user.setUserid(cur.getInteger("userid"));
				user.setUsername(cur.getString("username"));
				// add user
				users.add(user);
			}
		} catch(Exception ex) {
			System.out.println(ex);
		}
		finally {
			cursor.close();
		}
		return users;
		return null;
	};
	*/
}
